plugins {
	id 'java'
	id 'org.springframework.boot' version "$springBootVersion"
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'me.jangjunha.ftgo'
version = '0.0.1-SNAPSHOT'

dependencies {
	implementation "io.eventuate.tram.core:eventuate-tram-spring-events"
	implementation "io.eventuate.tram.core:eventuate-tram-aggregate-domain-events"
	implementation "io.eventuate.tram.core:eventuate-tram-spring-producer-jdbc"
	implementation "io.eventuate.tram.core:eventuate-tram-spring-events-publisher"

	implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	implementation project(':ftgo-common-jpa')
	implementation project(':ftgo-restaurant-service-api')

	developmentOnly "org.springframework.boot:spring-boot-devtools:$springBootVersion"
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
	testImplementation 'au.com.dius.pact.provider:junit5spring:4.6.2'
	testRuntimeOnly 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()

	systemProperty("pact.provider.version", System.getenv("GIT_COMMIT") ?: "")
	systemProperty("pact.provider.tag", System.getenv("GIT_BRANCH") ?: "")
	systemProperty("pact.provider.branch", System.getenv("GIT_BRANCH") ?: "")
	systemProperty("pactbroker.consumerversionselectors.rawjson", "[{\"mainBranch\":true}]")
	systemProperty("pact.verifier.publishResults", System.getenv("PACT_BROKER_PUBLISH_VERIFICATION_RESULTS") == null ? "false" : "true")
}
