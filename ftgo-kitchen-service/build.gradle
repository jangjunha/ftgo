plugins {
	id 'java'
	id 'org.springframework.boot' version "$springBootVersion"
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'me.jangjunha.ftgo'
version = '0.0.1-SNAPSHOT'

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-json:$springBootVersion"

	implementation "io.eventuate.tram.core:eventuate-tram-spring-events"
	implementation "io.eventuate.tram.core:eventuate-tram-spring-events-publisher"
	implementation "io.eventuate.tram.core:eventuate-tram-spring-producer-jdbc"
	implementation "io.eventuate.tram.core:eventuate-tram-spring-consumer-kafka"
	implementation "io.eventuate.tram.core:eventuate-tram-aggregate-domain-events"
	implementation "io.eventuate.tram.sagas:eventuate-tram-sagas-spring-orchestration-simple-dsl"
	implementation "io.eventuate.tram.sagas:eventuate-tram-sagas-spring-participant"

	implementation "io.grpc:grpc-netty:$grpcVersion"
	implementation "io.grpc:grpc-stub:$grpcVersion"

	implementation(project(':ftgo-common')) {
		capabilities {
			requireCapability('me.jangjunha.ftgo:ftgo-common-proto')
		}
	}
	implementation project(':ftgo-common-jpa')
	implementation project(':ftgo-kitchen-service-api')
	implementation project(':ftgo-restaurant-service-api')

	implementation "com.querydsl:querydsl-jpa:$queryDslVersion:jakarta"
	implementation "com.querydsl:querydsl-apt:$queryDslVersion:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:$queryDslVersion:jakarta"
	annotationProcessor "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"

	testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"

	developmentOnly "org.springframework.boot:spring-boot-devtools:$springBootVersion"
	runtimeOnly 'org.postgresql:postgresql'
}

tasks.named('test') {
	useJUnitPlatform()
}
