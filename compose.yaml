services:
  ### Messaging ###
  zookeeper:
    image: eventuateio/eventuate-zookeeper:0.17.0.RELEASE
    volumes:
      - zookeeper-data:/usr/local/zookeeper-data
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      KAFKA_HEAP_OPTS: -Xmx64m

  kafka:
    image: eventuateio/eventuate-kafka:0.17.0.RELEASE
    volumes:
      - kafka-data:/tmp/kafka-logs
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_LISTENERS: LC://kafka:29092,LX://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: LC://kafka:29092,LX://${DOCKER_HOST_IP:-localhost}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LC:PLAINTEXT,LX:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LC
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: -Xmx192m

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - 8989:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:22181

  cdc-service:
    image: eventuateio/eventuate-cdc-service:0.15.0.RELEASE
    ports:
      - 8099:8080
    depends_on:
      - kafka
      - restaurant-service-db
      - kitchen-service-db
    environment:
      SPRING_PROFILE_ACTIVE: PostgresWal

      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181

      EVENTUATE_CDC_PIPELINE_RESTAURANT_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_RESTAURANT_READER: restaurantservice
      EVENTUATE_CDC_READER_RESTAURANTSERVICE_TYPE: postgres-wal
      EVENTUATE_CDC_READER_RESTAURANTSERVICE_DATASOURCEDRIVERCLASSNAME: org.postgresql.Driver
      EVENTUATE_CDC_READER_RESTAURANTSERVICE_DATASOURCEURL: jdbc:postgresql://restaurant-service-db/ftgo-restaurant-service
      EVENTUATE_CDC_READER_RESTAURANTSERVICE_DATASOURCEUSERNAME: postgres
      EVENTUATE_CDC_READER_RESTAURANTSERVICE_DATASOURCEPASSWORD: ''
      EVENTUATE_CDC_READER_RESTAURANTSERVICE_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/reader-restaurant-db
      EVENTUATE_CDC_READER_RESTAURANTSERVICE_OUTBOXID: 8101

      EVENTUATE_CDC_PIPELINE_KITCHEN_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_KITCHEN_READER: kitchenservice
      EVENTUATE_CDC_READER_KITCHENSERVICE_TYPE: postgres-wal
      EVENTUATE_CDC_READER_KITCHENSERVICE_DATASOURCEDRIVERCLASSNAME: org.postgresql.Driver
      EVENTUATE_CDC_READER_KITCHENSERVICE_DATASOURCEURL: jdbc:postgresql://kitchen-service-db/ftgo-kitchen-service
      EVENTUATE_CDC_READER_KITCHENSERVICE_DATASOURCEUSERNAME: postgres
      EVENTUATE_CDC_READER_KITCHENSERVICE_DATASOURCEPASSWORD: ''
      EVENTUATE_CDC_READER_KITCHENSERVICE_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/reader-kitchen-db
      EVENTUATE_CDC_READER_KITCHENSERVICE_OUTBOXID: 8105


  ### Databases ###
  restaurant-service-db:
    restart: always
    build:
      context: ./database
    volumes:
      - restaurant-service-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=ftgo-restaurant-service
      - USE_DB_ID=true

  kitchen-service-db:
    restart: always
    build:
      context: ./database
    volumes:
      - kitchen-service-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=ftgo-kitchen-service
      - USE_DB_ID=true

  order-service-db:
    restart: always
    build:
      context: ./database
    volumes:
      - order-service-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=ftgo-order-service
      - USE_DB_ID=true


  ### Applications ###
  restaurant-service-app:
    build:
      context: .
      target: restaurant-service
    ports:
      - 8101:8101
    depends_on:
      - restaurant-service-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://restaurant-service-db/ftgo-restaurant-service
      SPRING_DATASOURCE_USERNAME: postgres

  kitchen-service-app:
    build:
      context: .
      target: kitchen-service
    ports:
      - 8105:8105
    depends_on:
      - kitchen-service-db
      - kafka
      - zookeeper
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://kitchen-service-db/ftgo-kitchen-service
      SPRING_DATASOURCE_USERNAME: postgres
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181

  order-service-app:
    build:
      context: .
      target: order-service
    ports:
      - 8103:8103
    depends_on:
      - order-service-db
      - kafka
      - zookeeper
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://order-service-db/ftgo-order-service
      SPRING_DATASOURCE_USERNAME: postgres
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181

volumes:
  zookeeper-data: {}
  kafka-data: {}
  restaurant-service-db-data: {}
  kitchen-service-db-data: {}
  order-service-db-data: {}
