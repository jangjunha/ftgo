plugins {
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
	id 'org.jetbrains.kotlin.jvm'
	id 'org.jetbrains.kotlin.plugin.spring'
	id 'org.jetbrains.kotlin.plugin.jpa'
}

group = 'me.jangjunha.ftgo'
version = '0.0.1-SNAPSHOT'

dependencies {
	implementation "io.eventuate.tram.sagas:eventuate-tram-sagas-spring-orchestration-simple-dsl"
	implementation "io.eventuate.tram.sagas:eventuate-tram-sagas-spring-orchestration"
	implementation "io.eventuate.tram.sagas:eventuate-tram-sagas-spring-participant"
	implementation "io.eventuate.tram.core:eventuate-tram-aggregate-domain-events"
	implementation "io.eventuate.tram.core:eventuate-tram-spring-consumer-kafka"
	implementation "io.eventuate.tram.core:eventuate-tram-spring-producer-jdbc"
	implementation "io.eventuate.tram.core:eventuate-tram-spring-events-publisher"

	implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation "io.grpc:grpc-netty:$grpcVersion"
	implementation "io.grpc:grpc-kotlin-stub:$grpcKotlinVersion"
	implementation "com.google.protobuf:protobuf-kotlin:$protobufVersion"

	implementation project(':ftgo-common-jpa')
	implementation project(':ftgo-accounting-service-api')
	implementation project(':ftgo-consumer-service-api')
	implementation project(':ftgo-kitchen-service-api')
	implementation project(':ftgo-restaurant-service-api')
	implementation project(':ftgo-order-service-api')

	testImplementation ("org.springframework.boot:spring-boot-starter-test:$springBootVersion") {
		exclude module: "mockito-core"
	}
	testImplementation "com.ninja-squad:springmockk:4.0.0"
	testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1'
	testImplementation 'org.jetbrains.kotlin:kotlin-test'
	testImplementation "io.eventuate.tram.core:eventuate-tram-test-util"
	testImplementation "io.eventuate.tram.sagas:eventuate-tram-sagas-spring-testing-support"

	developmentOnly "org.springframework.boot:spring-boot-devtools:$springBootVersion"

	runtimeOnly 'org.postgresql:postgresql'
}

tasks.named('test') {
	useJUnitPlatform()
}

allOpen {
	annotation("jakarta.persistence.Entity")
	annotation("jakarta.persistence.Embeddable")
}

noArg {
	annotation("jakarta.persistence.Entity")
	annotation("jakarta.persistence.Embeddable")
}
