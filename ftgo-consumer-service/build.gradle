import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.spring'
    id 'org.jetbrains.kotlin.plugin.jpa'
}

group = 'me.jangjunha.ftgo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation "io.eventuate.tram.sagas:eventuate-tram-sagas-spring-participant"
    implementation "io.eventuate.tram.core:eventuate-tram-spring-producer-jdbc"
    implementation "io.eventuate.tram.core:eventuate-tram-spring-events-publisher"
    implementation "io.eventuate.tram.core:eventuate-tram-aggregate-domain-events"
    implementation "io.eventuate.tram.core:eventuate-tram-spring-consumer-kafka"
    implementation "io.eventuate.tram.core:eventuate-tram-spring-consumer-jdbc"

    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation project(':ftgo-common-jpa')
    implementation project(':ftgo-consumer-service-api')

    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"

    developmentOnly "org.springframework.boot:spring-boot-devtools:$springBootVersion"

    runtimeOnly 'org.postgresql:postgresql'
}

compileKotlin {
    compilerOptions {
        jvmTarget.set(JvmTarget.JVM_17)
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

allOpen {
    annotation("jakarta.persistence.Entity")
    annotation("jakarta.persistence.Embeddable")
}

noArg {
    annotation("jakarta.persistence.Entity")
    annotation("jakarta.persistence.Embeddable")
}
